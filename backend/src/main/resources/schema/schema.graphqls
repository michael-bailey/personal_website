type Query {
    getBlogPosts: [BlogPost!]!
    viewer: ViewerContext
}

type Mutation {

    selectCookiePreferences(
        result: SelectCookieResult!
    ): PrivacyPreferences

    createBlogPost(
        name: String!,
        title: String!,
        content: String!,
    ): BlogPost!
}

enum SelectCookieResult {
    Accept
    Deny
}

interface Node {
    id: ID!
}

type BlogPost implements Node {
    id: ID!

    name: String!
    title: String!
    date: String!
    content: String!

    url: String!
}

interface UserInfo {
    profilePictureURL: String!
}

type ViewerContext {
    id: ID
    locale: String
    privacyPreferences: PrivacyPreferences
}

type PrivacyPreferences {
    id: ID
    cookiePromptDismissed: Boolean
    allowedDomainLogging: Boolean
    allowedRequestLogging: Boolean
}
