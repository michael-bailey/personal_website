name: Build and Deploy to Raspberry Pi

on:
  push:
    branches: [ master ]

jobs:
  build-backend-and-push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}-backend:latest
          platforms: linux/arm64

  build-frontend-and-push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}-frontend:latest
          platforms: linux/arm64
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.PRIVATE_GITHUB_ACCESS_TOKEN }}

# To be completed, when provisiond is ready
#  deploy:
#    runs-on: ubuntu-latest
#    needs:
#      - build-backend-and-push
#      - build-frontend_and_push
#
#    steps:
#      - name: SSH Deploy
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.PI_HOST }}
#          username: ${{ secrets.PI_USER }}
#          key: ${{ secrets.PI_SSH_KEY }}
#          script: |
#            cd /srv/personal-blog
#            docker compose pull
#            sudo systemctl restart spring-blog.service